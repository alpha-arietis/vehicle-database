{"ast":null,"code":"var _jsxFileName = \"/Users/ivoalexandroff/Desktop/Coding/Projects/VehicleTracker/vehicle-tracker/src/App.js\";\nimport React from 'react'; //import './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/navbar.component';\nimport VehicleList from './components/vehicle-list.component';\nimport EditVehicle from './components/edit-vehicle.component';\nimport CreateVehicle from './components/create-vehicle.component';\n\nfunction App() {\n  const express = require('express');\n\n  const cors = require('cors');\n\n  const mongoose = require('mongoose'); // *** SET UP SERVER ***\n\n\n  require('dotenv').config();\n\n  const app = express();\n  const port = process.env.port || 5000;\n  app.use(cors()); // cors middleware\n\n  app.use(express.json()); // allows us to use JSON\n  // *** CONNECT TO MONGODB ***\n\n  const uri = process.env.ATLAS_URI;\n  mongoose.connect(uri, {\n    useNewUrlParser: true,\n    useCreateIndex: true,\n    useUnifiedTopology: true\n  });\n  const connection = mongoose.connection;\n  connection.once('open', () => {\n    console.log('Connection to MongoDB established successfully');\n  }); // *** REQUIRE ROUTE FILES AND USE THEM ***\n\n  const vehiclesRouter = require('./routes/vehicles');\n\n  app.use('/vehicles', vehiclesRouter);\n  app.listen(port, () => {\n    console.log(`Server is running on port ${port}`); // tells server to listen on a certain port\n  });\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/vehicle-database/\",\n    exact: true,\n    component: VehicleList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/vehicle-database/edit/:id\",\n    component: EditVehicle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/vehicle-database/create\",\n    component: CreateVehicle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivoalexandroff/Desktop/Coding/Projects/VehicleTracker/vehicle-tracker/src/App.js"],"names":["React","BrowserRouter","Router","Route","Navbar","VehicleList","EditVehicle","CreateVehicle","App","express","require","cors","mongoose","config","app","port","process","env","use","json","uri","ATLAS_URI","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","connection","once","console","log","vehiclesRouter","listen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,sCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,QAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB,CAJa,CAMb;;;AACAA,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,QAAMC,GAAG,GAAGL,OAAO,EAAnB;AACA,QAAMM,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,EAAAA,GAAG,CAACI,GAAJ,CAAQP,IAAI,EAAZ,EAZa,CAYG;;AAChBG,EAAAA,GAAG,CAACI,GAAJ,CAAQT,OAAO,CAACU,IAAR,EAAR,EAba,CAaW;AAExB;;AAEA,QAAMC,GAAG,GAAGJ,OAAO,CAACC,GAAR,CAAYI,SAAxB;AACAT,EAAAA,QAAQ,CAACU,OAAT,CAAiBF,GAAjB,EAAsB;AAACG,IAAAA,eAAe,EAAE,IAAlB;AAAwBC,IAAAA,cAAc,EAAE,IAAxC;AAA8CC,IAAAA,kBAAkB,EAAE;AAAlE,GAAtB;AACA,QAAMC,UAAU,GAAGd,QAAQ,CAACc,UAA5B;AACAA,EAAAA,UAAU,CAACC,IAAX,CAAgB,MAAhB,EAAwB,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACH,GAFD,EApBa,CAwBb;;AACA,QAAMC,cAAc,GAAGpB,OAAO,CAAC,mBAAD,CAA9B;;AACAI,EAAAA,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAqBY,cAArB;AAEAhB,EAAAA,GAAG,CAACiB,MAAJ,CAAWhB,IAAX,EAAiB,MAAM;AACnBa,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4Bd,IAAK,EAA9C,EADmB,CAC8B;AACpD,GAFD;AAIA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,oBAAZ;AAAiC,IAAA,KAAK,MAAtC;AAAuC,IAAA,SAAS,EAAIV,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,4BAAZ;AAAyC,IAAA,SAAS,EAAIC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,0BAAZ;AAAuC,IAAA,SAAS,EAAIC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADF,CADF;AAWD;;AAED,eAAeC,GAAf","sourcesContent":["import React from 'react';\n//import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Navbar from './components/navbar.component'\nimport VehicleList from './components/vehicle-list.component'\nimport EditVehicle from './components/edit-vehicle.component'\nimport CreateVehicle from './components/create-vehicle.component'\n\nfunction App() {\n\n  const express = require('express')\n  const cors = require('cors')\n  const mongoose = require('mongoose')\n\n  // *** SET UP SERVER ***\n  require('dotenv').config()\n\n  const app = express()\n  const port = process.env.port || 5000\n\n  app.use(cors()) // cors middleware\n  app.use(express.json()) // allows us to use JSON\n\n  // *** CONNECT TO MONGODB ***\n\n  const uri = process.env.ATLAS_URI\n  mongoose.connect(uri, {useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true})\n  const connection = mongoose.connection\n  connection.once('open', () => {\n      console.log('Connection to MongoDB established successfully')\n  })\n\n  // *** REQUIRE ROUTE FILES AND USE THEM ***\n  const vehiclesRouter = require('./routes/vehicles')\n  app.use('/vehicles', vehiclesRouter)\n\n  app.listen(port, () => {\n      console.log(`Server is running on port ${port}`) // tells server to listen on a certain port\n  })\n\n  return (\n    <Router>\n      <div className='container-fluid'>\n      <Navbar/>\n      <br/>\n      <Route path='/vehicle-database/' exact component = {VehicleList}/>\n      <Route path='/vehicle-database/edit/:id' component = {EditVehicle}/>\n      <Route path='/vehicle-database/create' component = {CreateVehicle}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}